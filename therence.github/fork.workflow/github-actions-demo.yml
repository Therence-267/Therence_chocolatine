name: Chocolatine Workflow

on:
  push:
    branches-ignore:
      - ga-ignore-*
  pull_request:
    branches-ignore:
      - ga-ignore-*

jobs:
  check_coding_style:
    name: Coding Style Check
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Getting the code
        uses: actions/checkout@v4

      - name: Checking the coding style
        run: check.sh $(pwd) $(pwd)

      - name: Afficher les erreurs de style
        run: |
          if [ -f coding-style-reports.log ]; then
            while read -r line; do
              echo "::error file=$(echo $line | cut -d':' -f1),line=$(echo $line | cut -d':' -f2)::$line"
            done < coding-style-reports.log
            exit 1
          fi

  check_program_compilation:
    name: Compilation du programme
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4

      - name: Compiler le programme
        run: timeout 120s make

      - name: Nettoyer après compilation
        run: make clean

      - name: Vérifier les exécutables
        run: |
          IFS=',' read -ra EXECS <<< "${{ env.EXECUTABLES }}"
          for exe in "${EXECS[@]}"; do
            if [[ ! -x "$exe" ]]; then
              echo "::error file=$exe::$exe est manquant ou non exécutable"
              exit 1
            fi
          done

  run_tests:
    name: Exécution des tests
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_program_compilation
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4

      - name: Lancer les tests
        run: timeout 120s make tests_run

  push_to_mirror:
    name: Synchronisation avec le miroir
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.event_name == 'push'
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4

      - name: Configuration l'accès SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Pousser vers le dépôt miroir
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}